#include<bits/stdc++.h>
using namespace std;
class queue1{
    public:
    int front;
    int rare;
    int *arr;
    int size;
    //constructor
    queue1(int size){
        this->size=size;
        front=rare=-1;
        arr=new int;
    }
    int push(int data){
        //check if the queue is full or not
        if((front==0 && rare==size-1) || (rare==(front-1)%(size-1))){
            cout<<"the queue is full "<<endl;
            return false;
        }
        else  if(front==-1){
            //front=1 means we insert the 1st element in the  queue

                front=rare=0;
                arr[rare]=data;
                rare++;
            }
            else if(rare=size-1 && front!=0){
                rare=0;
                arr[rare]=data;
            }
            else{
                rare++;
                arr[rare]=data;
            }
        }
        int dequeue(){
            //check whether the queue is empty or not
            if(front==-1){
                cout<<"queue is empty"<<endl;
            }
            //store the front int ans variable to make it -1
            int ans=arr[front];
            arr[front]=-1;
            if(front==rare){
                //single element is present when want to pop it
             front=rare=-1;
            }
            else if(front=size-1){
                front=0;
            }
            else{
                 front++;
  
            }
           return ans;
        }
        
    
    void display(){
        for(int i=front;i<rare;i++){
            cout<<arr[i]<<" ";
        }
    }
};
int main(){
    queue1 q(3);
    q.push(99);
    q.display();
    q.dequeue();
    q.display();

}

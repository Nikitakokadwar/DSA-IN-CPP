#include<bits/stdc++.h>
using namespace std;
int partition(int arr[] ,int s , int e){
   // take 1st element as pivot
   int pivot =arr[s];
   // apply condition the smaller element place before pivot and greater after the pivot
   int cnt =0;
   // for printing the pivot
   for(int i= s+1;i<=e ;i++){
     if(arr[i]<= pivot){
      cnt++;
   }
     }
     // put the pivot at its right position
    int  pivotIndex   = s+cnt;
     swap(arr[pivotIndex],arr[s]);
     //left and right partion
     int i=s;
     int j=e;
     while(i < pivotIndex && j> pivotIndex){
     while(arr[i] <= pivot){
      i++;
     }
     while(arr[j]> pivot){
      j--;
     }
     
     // baher ala tar hi condition
     if(i<pivotIndex && j> pivotIndex){
      swap (arr[i++],arr[j--]);
     }
}
     return pivotIndex;
     
}
void quicksort(int arr[] , int s ,int e){
   //base case
   if(s>=e){
      return ;
   }
  int  p=partition(arr, s,e);
   //sort left side of array
   quicksort( arr ,s ,p-1);
   // sort the right side part
   quicksort(arr , p+1 , e);
}
int main(){
   int arr[5]={2,4,1,6,9};
   int n=5;
   // function calling
   quicksort(arr,0,n-1);
   //print the array
   for(int i=0 ;i< n ;i++){
      cout<< arr[i];
   }
   cout<<endl;
   return 0;
}

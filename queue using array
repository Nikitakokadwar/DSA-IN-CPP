#include <bits/stdc++.h> 
class Queue {
    int qfront;
    int rare;
    int *arr;
    int size;
public:
    Queue() {
        // Implement the Constructor
        int size=100001;
         arr= new int[size];
        qfront=0;
        rare=0;
    }

    /*----------------- Public Functions of Queue -----------------*/

    bool isEmpty() {
        // Implement the isEmpty() function
        if(qfront==rare){
            return true;
        }
        else{
            return false;
        }
    }

    void enqueue(int data) {
        // Implement the enqueue() function
        //first check if the queue is full or not
        if(rare==size){
           cout<<"queue is full"<<endl;
        }
        else{
            arr[rare]=data;
            rare++;
        }
    }

    int dequeue() {
        // Implement the dequeue() function
        //check if the queue is empty or not
        if(qfront==rare){
            return -1;
        }
        else{
            //return -1 to pop the element from the array
            int ans=arr[qfront];
            arr[qfront]=-1;
            qfront++;
            if(qfront==rare){
                qfront=0;
                rare=0;
            }
            return ans;
        }
    }

    int front() {
        // Implement the front() function
        //check if front is empty or not
        if(qfront==rare){
            return -1;
        }
        else{
            return arr[qfront];
        }
    }
};
